{"version":3,"sources":["components/FramesList.js","components/App.js","index.js"],"names":["FramesList","props","frames","Card","sx","width","mt","CardContent","List","ListItem","Typography","variant","Divider","ImageList","cols","rowHeight","map","frame","i","ImageListItem","src","alt","App","useState","setFrames","isProcessing","setIsProcessing","videoDuration","setVideoDuration","videoName","setVideoName","videoObjectUrl","setVideoObjectUrl","imagesToLoad","setImagesToLoad","handleVideoProcess","e","a","preventDefault","Promise","resolve","video","document","createElement","addEventListener","seekResolve","canvas","context","getContext","videoWidth","w","h","height","duration","fps","localFrames","currentTime","length","r","drawImage","imageData","toDataURL","push","newFrames","Box","backgroundColor","Container","fixed","minHeight","display","flexDirection","alignItems","justifyContent","py","style","onSubmit","type","id","onChange","preload","onloadedmetadata","target","files","name","URL","createObjectURL","ButtonGroup","htmlFor","Button","component","disabled","flexGrow","slice","gutterBottom","Slider","valueLabelDisplay","components","ValueLabel","children","value","Tooltip","enterTouchDelay","placement","title","defaultValue","Math","floor","max","mr","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.28641235.chunk.js","sourcesContent":["import {\n  Card,\n  CardContent,\n  Divider,\n  ImageList,\n  ImageListItem,\n  List,\n  ListItem,\n  Typography\n} from '@mui/material';\n\nexport const FramesList = (props) => {\n  const { frames } = props;\n  return (\n    <Card sx={{ width: '100%', mt: 3 }}>\n      <CardContent>\n        <List>\n          <ListItem>\n            <Typography variant='h5'>Frames:</Typography>\n          </ListItem>\n          <Divider />\n          <ListItem>\n            <ImageList\n              sx={{ width: '100%' }}\n              variant='quilted'\n              cols={4}\n              rowHeight={160}\n            >\n              {frames.map((frame, i) => (\n                <ImageListItem key={i}>\n                  <img key={i} src={frame} alt='...' />\n                </ImageListItem>\n              ))}\n            </ImageList>\n          </ListItem>\n        </List>\n      </CardContent>\n    </Card>\n  );\n};\n","import { useState } from 'react';\nimport { BarLoader } from 'react-spinners';\nimport { FramesList } from './FramesList';\nimport {\n  Box,\n  Button,\n  ButtonGroup,\n  Card,\n  CardContent,\n  Container,\n  Slider,\n  Tooltip,\n  Typography\n} from '@mui/material';\n\nfunction App() {\n  const [frames, setFrames] = useState([]);\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  const [videoDuration, setVideoDuration] = useState(0);\n  const [videoName, setVideoName] = useState('');\n  const [videoObjectUrl, setVideoObjectUrl] = useState('');\n  const [imagesToLoad, setImagesToLoad] = useState(0);\n\n  const handleVideoChange = (e) => {\n    let video = document.createElement('video');\n    video.preload = 'metadata';\n    video.onloadedmetadata = () => {\n      setVideoDuration(video.duration);\n      setVideoName(e.target.files[0].name);\n      setVideoObjectUrl(URL.createObjectURL(e.target.files[0]));\n    };\n    video.src = URL.createObjectURL(e.target.files[0]);\n  };\n\n  const handleVideoProcess = async (e) => {\n    e.preventDefault();\n    if (!videoObjectUrl || !imagesToLoad) {\n      return;\n    }\n    setIsProcessing(true);\n    const newFrames = await new Promise(async (resolve) => {\n      let video = document.createElement('video');\n\n      let seekResolve;\n      video.addEventListener('seeked', async () => {\n        if (seekResolve) {\n          seekResolve();\n        }\n      });\n\n      video.addEventListener('loadeddata', async () => {\n        const canvas = document.createElement('canvas');\n        const context = canvas.getContext('2d');\n        const [w, h] = [video.videoWidth, video.videoWidth];\n        canvas.width = w;\n        canvas.height = h;\n\n        const duration = video.duration;\n        const fps = duration / imagesToLoad;\n        let localFrames = [];\n        let currentTime = 0;\n\n        while (localFrames.length < imagesToLoad) {\n          video.currentTime = currentTime;\n          await new Promise((r) => (seekResolve = r)); // eslint-disable-line\n\n          context.drawImage(video, 0, 0, w, h);\n          const imageData = canvas.toDataURL('image/jpeg');\n          localFrames.push(imageData);\n\n          currentTime += fps;\n        }\n\n        resolve(localFrames);\n      });\n\n      video.src = videoObjectUrl;\n    });\n    setIsProcessing(false);\n    setFrames(newFrames);\n  };\n\n  const RangeTooltip = ({ children, value }) => (\n    <Tooltip enterTouchDelay={0} placement='top' title={value}>\n      {children}\n    </Tooltip>\n  );\n\n  return (\n    <Box sx={{ backgroundColor: '#282c34' }}>\n      <Container\n        fixed={true}\n        sx={{\n          minHeight: '100vh',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          py: 3\n        }}\n      >\n        <Card style={{ width: '30rem' }}>\n          <CardContent>\n            <Typography variant='h5'>Select video to process:</Typography>\n            <form onSubmit={handleVideoProcess}>\n              <Box sx={{ mt: 2 }}>\n                <input\n                  type='file'\n                  id='videoFileInput'\n                  style={{ display: 'none' }}\n                  onChange={handleVideoChange}\n                />\n                <ButtonGroup sx={{ width: '100%' }}>\n                  <label htmlFor='videoFileInput'>\n                    <Button variant='contained' component='span'>\n                      Choose...\n                    </Button>\n                  </label>\n                  <Button disabled={true} sx={{ flexGrow: 1 }}>\n                    {videoName\n                      ? videoName.slice(0, 20) + '...'\n                      : 'No file selected'}\n                  </Button>\n                </ButtonGroup>\n              </Box>\n              {!!videoDuration && (\n                <Box sx={{ mt: 2 }}>\n                  <Typography gutterBottom>\n                    Number of images to upload\n                  </Typography>\n                  <Slider\n                    valueLabelDisplay='auto'\n                    components={{ ValueLabel: RangeTooltip }}\n                    defaultValue={Math.floor(videoDuration / 2)}\n                    max={Math.floor(videoDuration)}\n                    onChange={(e) => setImagesToLoad(e.target.value)}\n                  />\n                </Box>\n              )}\n              <Box sx={{ display: 'flex', alignItems: 'center', mt: 2 }}>\n                <Button\n                  type='submit'\n                  variant='outlined'\n                  disabled={isProcessing}\n                  sx={{ mr: 2 }}\n                >\n                  Process video\n                </Button>\n                {isProcessing && <BarLoader />}\n              </Box>\n            </form>\n          </CardContent>\n        </Card>\n        {!!frames.length && <FramesList frames={frames} />}\n      </Container>\n    </Box>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}