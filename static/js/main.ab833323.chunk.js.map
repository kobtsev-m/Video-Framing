{"version":3,"sources":["App.js","index.js"],"names":["App","useState","frames","setFrames","isProcessing","setIsProcessing","videoObjectUrl","setVideoObjectUrl","framesTotal","setFramesTotal","handleVideoProcess","e","a","preventDefault","Promise","resolve","video","document","createElement","addEventListener","seekResolve","canvas","context","getContext","videoWidth","w","h","width","height","duration","fps","localFrames","currentTime","length","r","drawImage","imageData","toDataURL","push","src","newFrames","className","Container","Card","Body","Title","onSubmit","Form","Group","Control","type","onChange","URL","createObjectURL","target","files","placeholder","value","Button","variant","disabled","map","frame","i","alt","ReactDOM","render","StrictMode","getElementById"],"mappings":"8SAyHeA,MApHf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACNC,EADM,KACEC,EADF,OAE2BF,oBAAS,GAFpC,mBAENG,EAFM,KAEQC,EAFR,OAI+BJ,mBAAS,IAJxC,mBAINK,EAJM,KAIUC,EAJV,OAKyBN,mBAAS,GALlC,mBAKNO,EALM,KAKOC,EALP,KAePC,EAAkB,uCAAG,WAAOC,GAAP,eAAAC,EAAA,yDACzBD,EAAEE,iBACGP,GAAmBE,EAFC,wDAKzBH,GAAgB,GALS,SAMD,IAAIS,QAAJ,uCAAY,WAAOC,GAAP,iBAAAH,EAAA,uDAC9BI,EAAQC,SAASC,cAAc,UAG7BC,iBAAiB,SAAvB,sBAAiC,sBAAAP,EAAA,sDAC3BQ,GACFA,IAF6B,4CAMjCJ,EAAMG,iBAAiB,aAAvB,sBAAqC,8CAAAP,EAAA,sDAC7BS,EAASJ,SAASC,cAAc,UAChCI,EAAUD,EAAOE,WAAW,MAFC,EAGpB,CAACP,EAAMQ,WAAYR,EAAMQ,YAAjCC,EAH4B,KAGzBC,EAHyB,KAInCL,EAAOM,MAAQF,EACfJ,EAAOO,OAASF,EAEVG,EAAWb,EAAMa,SACjBC,EAAMD,EAAWrB,EACnBuB,EAAc,GACdC,EAAc,EAViB,YAY5BD,EAAYE,OAASzB,GAZO,wBAajCQ,EAAMgB,YAAcA,EAba,UAc3B,IAAIlB,SAAQ,SAACoB,GAAD,OAAQd,EAAcc,KAdP,QAgBjCZ,EAAQa,UAAUnB,EAAO,EAAG,EAAGS,EAAGC,GAC5BU,EAAYf,EAAOgB,UAAU,cACnCN,EAAYO,KAAKF,GAEjBJ,GAAeF,EApBkB,uBAuBnCf,EAAQgB,GAvB2B,6CA0BrCf,EAAMuB,IAAMjC,EApCsB,2CAAZ,uDANC,OAMnBkC,EANmB,OA4CzBnC,GAAgB,GAChBF,EAAUqC,GA7Ce,2CAAH,sDAgDxB,OACE,qBAAKC,UAAU,MAAf,SACE,eAACC,EAAA,EAAD,CAAWD,UAAU,iBAArB,UACE,cAACE,EAAA,EAAD,CAAMF,UAAU,gBAAhB,SACE,eAACE,EAAA,EAAKC,KAAN,WACE,cAACD,EAAA,EAAKE,MAAN,uCACA,uBAAMC,SAAUpC,EAAhB,UACE,cAACqC,EAAA,EAAKC,MAAN,CAAYP,UAAU,OAAtB,SACE,cAACM,EAAA,EAAKE,QAAN,CAAcC,KAAK,OAAOC,SAhEd,SAACxC,GACzBJ,EAAkB6C,IAAIC,gBAAgB1C,EAAE2C,OAAOC,MAAM,UAiE3C,cAACR,EAAA,EAAKC,MAAN,CAAYP,UAAU,OAAtB,SACE,cAACM,EAAA,EAAKE,QAAN,CACEC,KAAK,SACLM,YAAY,gBACZL,SAlEW,SAACxC,GAC1BF,EAAeE,EAAE2C,OAAOG,YAoEd,sBAAKhB,UAAU,4BAAf,UACE,cAACiB,EAAA,EAAD,CACER,KAAK,SACLS,QAAQ,OACRC,SAAUxD,EACVqC,UAAU,OAJZ,2BAQCrC,GAAgB,cAAC,YAAD,iBAKtBF,EAAO+B,QACR,cAACU,EAAA,EAAD,CAAMF,UAAU,uBAAhB,SACE,eAACE,EAAA,EAAKC,KAAN,WACE,yCACC1C,EAAO2D,KAAI,SAACC,EAAOC,GAAR,OACV,qBAEExB,IAAKuB,EACLE,IAAI,MACJrC,MAAO,IACPC,OAAQ,GACRa,UAAU,OALLsB,iBCpGvBE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlD,SAASmD,eAAe,W","file":"static/js/main.ab833323.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { BarLoader } from 'react-spinners';\nimport { Button, Card, Container, Form } from 'react-bootstrap';\nimport './App.css';\n\nfunction App() {\n  const [frames, setFrames] = useState([]);\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  const [videoObjectUrl, setVideoObjectUrl] = useState('');\n  const [framesTotal, setFramesTotal] = useState(0);\n\n  const handleVideoChange = (e) => {\n    setVideoObjectUrl(URL.createObjectURL(e.target.files[0]));\n  };\n\n  const handleFramesChange = (e) => {\n    setFramesTotal(e.target.value);\n  };\n\n  const handleVideoProcess = async (e) => {\n    e.preventDefault();\n    if (!videoObjectUrl || !framesTotal) {\n      return;\n    }\n    setIsProcessing(true);\n    const newFrames = await new Promise(async (resolve) => {\n      let video = document.createElement('video');\n\n      let seekResolve;\n      video.addEventListener('seeked', async () => {\n        if (seekResolve) {\n          seekResolve();\n        }\n      });\n\n      video.addEventListener('loadeddata', async () => {\n        const canvas = document.createElement('canvas');\n        const context = canvas.getContext('2d');\n        const [w, h] = [video.videoWidth, video.videoWidth];\n        canvas.width = w;\n        canvas.height = h;\n\n        const duration = video.duration;\n        const fps = duration / framesTotal;\n        let localFrames = [];\n        let currentTime = 0;\n\n        while (localFrames.length < framesTotal) {\n          video.currentTime = currentTime;\n          await new Promise((r) => (seekResolve = r)); // eslint-disable-line\n\n          context.drawImage(video, 0, 0, w, h);\n          const imageData = canvas.toDataURL('image/jpeg');\n          localFrames.push(imageData);\n\n          currentTime += fps;\n        }\n\n        resolve(localFrames);\n      });\n\n      video.src = videoObjectUrl;\n    });\n    setIsProcessing(false);\n    setFrames(newFrames);\n  };\n\n  return (\n    <div className='App'>\n      <Container className='App__container'>\n        <Card className='App__formCard'>\n          <Card.Body>\n            <Card.Title>Select video to process:</Card.Title>\n            <form onSubmit={handleVideoProcess}>\n              <Form.Group className='my-3'>\n                <Form.Control type='file' onChange={handleVideoChange} />\n              </Form.Group>\n              <Form.Group className='my-3'>\n                <Form.Control\n                  type='number'\n                  placeholder='Frames number'\n                  onChange={handleFramesChange}\n                />\n              </Form.Group>\n              <div className='d-flex align-items-center'>\n                <Button\n                  type='submit'\n                  variant='dark'\n                  disabled={isProcessing}\n                  className='me-3'\n                >\n                  Process video\n                </Button>\n                {isProcessing && <BarLoader />}\n              </div>\n            </form>\n          </Card.Body>\n        </Card>\n        {!!frames.length && (\n          <Card className='App__imagesCard mt-3'>\n            <Card.Body>\n              <h3>Frames:</h3>\n              {frames.map((frame, i) => (\n                <img\n                  key={i}\n                  src={frame}\n                  alt='...'\n                  width={160}\n                  height={90}\n                  className='m-2'\n                />\n              ))}\n            </Card.Body>\n          </Card>\n        )}\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}